image: ubuntu:22.04

before_script:
   - apt-get update -qq &&
     DEBIAN_FRONTEND="noninteractive" apt-get install -y --no-install-recommends -qq
     build-essential ca-certificates cmake gcovr git gnupg lcov ninja-build software-properties-common wget
   - wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add -
   - add-apt-repository -y deb http://apt.llvm.org/jammy/ llvm-toolchain-jammy-16 main &&
     apt-get update -qq &&
     DEBIAN_FRONTEND="noninteractive" apt-get install -y --no-install-recommends -qq
     clang-16

build:
   stage: build
   script:
   - cmake -S . -B build/ -G Ninja -DCMAKE_BUILD_TYPE=Release
   - cmake --build build/

test:
   stage: test
   script:
   - CXX=/usr/bin/clang++-16 cmake -S . -B build/ -G Ninja -DCMAKE_BUILD_TYPE=Debug
   - cmake --build build/ --target test-signals
   - ./build/tst/test-signals --gtest_output="xml:report.xml"
   artifacts:
      reports:
         junit: report.xml

coverage:
   stage: test
   script:
   - cmake -S . -B build/ -G Ninja -DCODE_COVERAGE=On
   - cmake --build build/ --target check-coverage
   coverage: '/^TOTAL.*\s+(\d+\%)$/'

package:
   stage: deploy
   script:
   - cmake -S . -B signals/ -G Ninja -DCMAKE_BUILD_TYPE=Release
   - cmake --build signals/ --target package
   - cmake --build signals/ --target package_source
   artifacts:
      paths:
      - signals/signals-*-Linux.*
